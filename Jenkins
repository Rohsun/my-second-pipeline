pipeline {
    agent any

    environment {
        REPO_URL = "https://github.com/rohsun/my-second-pipeline.git"
        DOCKER_IMAGE = "rohsun/my-flask-app"
        DOCKER_CREDENTIALS_ID = "docker-credentials"  // Store DockerHub credentials in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: "$REPO_URL"
            }
        }

        stage('Build Application') {
            steps {
                sh 'pip install --break-system-packages -r requirements.txt'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                withDockerRegistry([credentialsId: "$DOCKER_CREDENTIALS_ID", url: ""]) {
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }
        stage('Remove Existing Container (If Running)') {
            steps {
                script {
                    def containerExists = sh(script: "docker ps -a --format '{{.Names}}' | grep -w ${CONTAINER_NAME} || true", returnStdout: true).trim()
                    if (containerExists) {
                        sh "docker stop ${CONTAINER_NAME} || true"
                        sh "docker rm ${CONTAINER_NAME} || true"
                    }
                }
            }
        }

        stage('Deploy Container') {
            steps {
                sh 'docker run -d -p 9090:8080 --name flask-app $DOCKER_IMAGE'
            }
        }
    }
}

