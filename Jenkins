pipeline {
    agent any

    environment {
        IMAGE_NAME = "rohsun/my-flask-app"
        CONTAINER_NAME = "flask-app"
        HOST_PORT = "9090"
        CONTAINER_PORT = "8080"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'github-credentials', url: 'https://github.com/Rohsun/my-second-pipeline.git'
            }
        }

        stage('Build Application') {
            steps {
                sh 'pip install --break-system-packages -r requirements.txt'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                withDockerRegistry([credentialsId: 'docker-credentials', url: 'https://index.docker.io/v1/']) {
                    sh "docker push ${IMAGE_NAME}"
                }
            }
        }

        stage('Remove Existing Container (If Running)') {
            steps {
                script {
                    def containerExists = sh(script: "docker ps -a --format '{{.Names}}' | grep -w ${CONTAINER_NAME} || true", returnStdout: true).trim()
                    if (containerExists) {
                        sh "docker stop ${CONTAINER_NAME} || true"
                        sh "docker rm ${CONTAINER_NAME} || true"
                    }
                }
            }
        }

        stage('Deploy Container') {
            steps {
                sh "docker run -d -p ${HOST_PORT}:${CONTAINER_PORT} --name ${CONTAINER_NAME} ${IMAGE_NAME}"
            }
        }
    }
}
